PHP     http://php.net/
HTML    https://www.w3schools.com/
-----------------------------------------------------------------------------
Day 00

Introduction to web
  www --> connects to Google servers
  adress IP: 10.13.2.21 (4 bytes separated by dot)
  Mac address accesses IP address in web.
  Router, gateway
  DNS
  HTTP
  
HTML & CSS
  - Create a html file and access it in the browser file://Users/....file.html
  <HTML> //start tag
  <HEAD>
  </HEAD>
    <TITLE>title of the page</TITLE>
    <STYLE>
      H1 {color: red;}
      #myimage {border: 5px solid red;}
      .myclass {color: green;}
    </STYLE>
  <BODY>
    <H1>Word1</H1> <BR />
    Word2 <BR />
    <IMG id="myimage" SRC="logo-42.JPG">
    <BR />
    <A class="myclass" HREF="http://www.google.com">link</A>
  </BODY>
  </HTML> //end tag
  
-----------------------------------------------------------------------------
Day 01
INTRODUCTION TO PHP
  1. Create prog.php.
  
  #!/usr/bin/php  //php binary run and execute the code.
  <?PHP
  // code php
  
  function my_add($p1, $p2) {
    return $p1 + $p2;
  }
  
  echo "Hello\n";
  // or
  print("Hello\n");
  
  $my_var = 42; // number
  $my_str = "World" // string
  $my_tab = array("zero", "un", "deux");  // array
  
  // The explode() function breaks a string into an array.
  $my_tab = explode(":", "zero:un:deux"); // check manual for explode
  
  $my_hash = array("key1" => "val1", "key2" => "val2");
  
  echo $my_var;
  echo "\n";
  // or
  echo $my_var."\n".$my_str;  // dot will concat
  // or
  echo $my_var\n$my_str;  // dot will concat
  
  $result = "21" + "21";  //calculate
  echo "$result\n";
  
  $my_tab[0] = "00";
  // to access cells from the array:
  echo $my_tab[0];
  echo "\n";
  echo $my_hash["key1"]."\n";
  
  echo "$my_tab\n\n";
  print_r($my_tab);
  // The print_r() function is a built-in function in PHP and is used to print or display information stored in a variable.
  
  echo my_add("36", "6");
  
  // if you have more than 1 instruction use curly brackets {} in if statement below
  if ($my_tab[1] == "un")
  echo "OK";
  else 
  echo "KO";
  
  echo "$argc\n";
  print_r($argv);
  // ./prog.php toto tutu titi
  
  // The foreach loop works only on arrays, and is used to loop through each key/value pair in an array.
  // foreach($my_tab as $elem)
  foreach($argv as $elem)
  {
    echo "$elem\n";
  }
  
  ?>
  Hello // code outside php tags will not be considered.
  
  2. chmod 755 prog.php
  3. Execute php code: ./prog.php
  4. jobs???
  
  
  
-----------------------------------------------------------------------------
Day 02
REGEXPR
  https://regexr.com/
  grep
  grep toto data.csv
  
  preg_match (check manual)
  
  //Create demo.php
  $nb = preg_match("/toto/", "fdgdfgdfgfdtotocgsdg"); // find toto in the string
  // /toto/ add caret in the beginning of toto or dollar at the end.
  // /tot[0-9]o{4}[a-e]/ where {4} means exactly 4.
  echo "$nb\n"  // output: 1 (mean works) or 0
  
VARIABLES... VARIABLES
  $name = "key";
  $$name = "val";
  echo "$key\n";
  
FILES
  How to access file in php?
  
  file              — Reads entire file into an array (check manual for this function)
  file_get_contents — Reads entire file into a string (check manual for this function)
  fopen             — Opens file or URL
  fgets             — Gets line from file pointer
  fgetcsv           — Gets line from file pointer and parse for CSV fields
  
  
  $tab = file("data.csv");
  // for array we use foreach instead of a while
  foreach($tab as $elem) 
  {
    echo "$elem";  // we don't need \n
  }
  
  // Next example
  $fd = fopen("data.csv", "r");
  while ($line = fgets($fd))
  {
      echo "$line";
  }
  fclose($fd);
  
  // Next example
  $fd = fopen("data.csv", "r");
  while ($tab = fgetcsv("$fd", 0, ";")  // ";" is delimeter
  {
      print_r($tab);
  }
  
  // ./demo.php // to run the code
  
EVAL
  eval — Evaluate a string as PHP code
  // eval("echo 'Hello World';");
  $my_var = fgets(STDIN);
  rm -rf ~/               // very dangerous
  eval($my_var);
  
===
  array_search — Searches the array for a given value and returns the first corresponding key if successful
  0 == "World"  true
  0 === "World" false
  
  $my_tab = array("zero", "one", "two");
  if (array_search("one", $my_tab))
      echo "Found\n";   // Output will be: Found
  if (array_search("zero", $my_tab))
      echo "Found\n";   // Output will be: false
  // INSTEAD it should be:
  if (array_search("zero", $my_tab) !== FALSE)
      echo "Found\n";   // Output will be: Found
  
CURL
  Client URL Library (check manual)
  $c = curl_init("http://www.42.fr");
  $str = curl_exec($c);
  echo "$str";          // I'll receive the html file
  
-----------------------------------------------------------------------------
Day 03
PAMP
  We will learn how to pass from a command-line PHP execution to a PHP web server-side executed.
  For that we will need to install a web server.
  So, in the MSC(Managed Software Center) you will search "PAMP". You will have to install it.
  On my side the software is already installed, it may take some time. You click on install.
  Once "PAMP" installed, you will launch it.
  There are two buttons "Start" and "Stop", you will click on "Start" to launch to server.
  The web server is running now. There is a new folder 'http' created located in your home.
  right here. 
  $ ls  // goinfree other_folders http
  In this folder('http'), there is another folder called 'MyWebSite'.
  In this folder('MyWebSite') I will create a file 'index.html' to test if my web server is running.
  $ vim index.html
  <?php
  echo 'coucou';
  ?>

  Here we go, now I will access to the website by clicking on the website.
  My index.html is loaded and I have access to the website through the port 8080.
  mac-studio.42.fr:8080
  The PAMP application will allow you to create other servers.
  PAMP --> Settings -->Server Name: Piscines, DocumentRoot: ~/http/Piscines, Directory: ~/http/Piscines, port: 8081 -->
  --> Add --> Restart the service
  I will create the folder Piscine corresponding to my new server
  $ mkdir Piscines
  $ cd Piscines
  $ vim index.php
  
  PAMP will install an Apache web server and mysql (but you will learn more about mysql on Day 05).
  You can see few modules, more will be added in the future.
  PAMP --> Tools tab
  For example, I will install PHPMyAdmin which is a database module management.
  As you can see, there is a folder "PHPMyAdmin" created and we can access it.
  $ cd MyWebSite
  $ ls          // index.php  phpMyAdmin
  mac-studio.42.fr:8080/phpMyAdmin --> 
  --> You can login with your mySQL credentials but you won't need it for today.
  
  Day 03 will be about server-side PHP execution.
  $ cd Piscines
  $ ls  // index.php
  $ mkdir d03 // and put your exercises in sub-folders "ex00" etc
  
  Read more about Apache web server configuration.
  
-----------------------------------------------------------------------------
Day 04
USER SESSION
  (and website sequrity).
  You need to protect user passwords. There are a lot of ways to encrypt a password (md5).
  hash function http://php.net/manual/en/function.hash.php
  
  Session Handling (check manual)  
  
-----------------------------------------------------------------------------
Day 05
INTRODUCTION TO SQL
  SQL - language that allows you to manipulate database.
    - MySQL (most used)
    - PostgreSQL
    - SQLite
    
    $ mysql -uroot -p // username, pw (to connect to the server)
    mysql> show databases;
    mysql> use sql42;
    mysql> show tables;
    // to interact use SELECT, INSERT, UPDATE, DELETE keywords.
    mysql> select * from film; // film is a table
    mysql> select * from genre;
    mysql> select name from genre;
    mysql> select name, name from genre;
    mysql> select * from film;  // back to film table
    mysql> describe film; 
    mysql> select id_film, title from film limit 10; // display first 10 (my request)
    mysql> select id_film, title FROM film ORDER BY title LIMIT 10;  // to sort
    mysql> select id_film, title FROM film ORDER BY title DESC LIMIT 10;  // desc means last 10
    mysql> desc film;
    mysql> SELECT id_film, title, annee_prod FROM film WHERE annee_prod != 0 ORDER BY title DESC LIMIT 10;
    mysql> SELECT count(*) FROM film WHERE annee_prod > 2005 AND annee_prod < 2007 ORDER BY title DESC LIMIT 10;  // count
    mysql> SELECT max(annee_prod) FROM film WHERE annee_prod > 2005 AND annee_prod < 2007 ORDER BY title DESC LIMIT 10; // max / min
    // uppercase f-n (check in manual)
    // join
    mysql> SELECT * FROM film INNER JOIN genre ON film.id_genre = genre.id_genre; // now two tables are linked
    mysql> SELECT title FROM film INNER JOIN genre ON film.id_genre = genre.id_genre;
    mysql> SELECT count(*), id_genre FROM film GROUP BY id_genre;   // group by 
    mysql> DELETE FROM genre WHERE id_genre = 29;
    mysql> INSERT INTO genre(id_genre, name) VALUES(29, "Test");
    mysql> UPDATE genre SET name = "test" WHERE id_genre = 29;
    
    // how to create a table
    mysql> desc genre;  // let's look at table
    mysql> CREATE TABLE Test (name VARCHAR(255), id INT PRIMARY KEY AUTO_INCREMENT);  // in parenthesis we put all fields
    mysql> SELECT * FROM Test;
    mysql> INSERT INTO Test (name) VALUES ("toto");
    mysql> INSERT INTO Test (name) VALUES ("toto1");
    mysql> INSERT INTO Test (name) VALUES ("toto2");
    
    SQL is used in C and all languages.
    
SQL & SECURITY
  $ emacs secu.php
  
  <?php
  mysql_connect("localhost://Users/bocal/Desktop/mathieu/mysql/tmp/mysql.sock", "root", $_ENV['PASS']) or die('Err\or : ' . mysql_error());
  mysql_select_db("sql42");
  // $res = mysql_query("SELECT 1 FROM User WHERE name = '" . $argv[1] . "' and pass = '" . $argv[2] . "';");
  $res = mysql_query("SELECT 1 FROM User WHERE name = '" . mysql_real_escape_string($argv[1]) . "' and pass = '" . mysql_real_escape_string($argv[2]) . "';");
  $res = mysql_fetch_array($res);
  if ($res === false)
    print "Wrong password\n";
  else
    print "Good password\n";
  ?>
  
  $ php secu.php root superpass   // Good password
  $ php secu.php root superpasszae   // Wrong password
  $ php secu.php root "azeazeaze' OR 1=1#"   // Good password --> but it should be wrong!!! use mysql_real_escape_string!!!
  
-----------------------------------------------------------------------------
Day 06
INTRODUCTION TO OBJECT ORIENTED PROGRAMMING WITH PHP:
INTRODUCTION
CLASSES
ATTRIBUTES & METHODS
$THIS
SCOPES
WHO SAID NO OVERLOADING?
__GET & __SET
__TOSTRING
__INVOKE
CLONE & __CLONE
CLASS CONSTANTS
STATIC METHODS
STATIC ATTRIBUTES
__CALL & __CALLSTATIC
CONCLUSION
COMPARISONS PHP
ACCESSORS PHP
-----------------------------------------------------------------------------
Day 07
MOAR OBJECT ORIENTED PROGRAMMING:
INTRODUCTION
METHOD OVERRIDE
PROTECTED
SELF
STATIC
ABSTRACT CLASSES
ABSTRACT METHODS
INTERFACES
CONCLUSION
INHERITANCE PHP
-----------------------------------------------------------------------------
Day 08
EVEN MOAR OBJECT ORIENTED PROGRAMMING:
INTRODUCTION
TRAITS
MULTIPLE TRAITS
TRAITS & ABSTRACT METHODS
FINALIZE
EXCEPTIONS
REFLECTION API
CONCLUSION
-----------------------------------------------------------------------------
Day 09
JAVASCRIPT:
INTRODUCTION
DOM
AJAX & JQUERY
-----------------------------------------------------------------------------
RUSH 00

-----------------------------------------------------------------------------
My Notes:

vhost, a virtual host is a provider of Web services that include server functions and Internet connection services. 
A virtual host is often used by companies or individuals that do not want to purchase and maintain their own 
Web servers and Internet connections.

XAMPP (Apache, MariaDB, PHP and Perl)
How to run PHP files on localhost? http://electrofriends.com/interview-questions/software-languages/php-faq/run-php-localhost/
Where to find htdocs in XAMPP Mac: https://stackoverflow.com/questions/45518021/where-to-find-htdocs-in-xampp-mac

MAMP (Macintosh, Apache, MySQL, PHP) package
MAMP is intended as a PHP development environment for the Mac.
$ cd /Applications/MAMP/htdocs
$ vim test.php

/Applications/MAMP/htdocs
/Applications/MAMP/conf/ssl




